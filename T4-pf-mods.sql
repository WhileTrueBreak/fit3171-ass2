/*****PLEASE ENTER YOUR DETAILS BELOW*****/
--T4-pf-mods.sql

--Student ID: 33965501
--Student Name: Jeffrey Chen


/* Comments for your marker:




*/

/*(a)*/
SELECT
	*
FROM
	SERVICE;

ALTER TABLE SERVICE ADD NONSTANDARD_COUNT NUMBER(5);

UPDATE SERVICE S
SET
	NONSTANDARD_COUNT = (
		SELECT
			COUNT(*)
		FROM
			VISIT_SERVICE VS
		WHERE
			VS.VISIT_SERVICE_LINECOST != S.SERVICE_STD_COST
			AND VS.SERVICE_CODE = S.SERVICE_CODE
	);

SELECT
	*
FROM
	SERVICE;

/*(b)*/

-- create payment tables
DROP TABLE VISIT_PAYMENT CASCADE CONSTRAINTS PURGE;

DROP TABLE PAYMENT_TYPE CASCADE CONSTRAINTS PURGE;

DROP SEQUENCE VISIT_PAYMENT_PK_SEQ;

DROP SEQUENCE PAYMENT_TYPE_PK_SEQ;

CREATE SEQUENCE VISIT_PAYMENT_PK_SEQ INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE PAYMENT_TYPE_PK_SEQ INCREMENT BY 1 START WITH 1;

CREATE TABLE VISIT_PAYMENT (
	PAYMENT_ID NUMBER(5) NOT NULL,
	VISIT_ID NUMBER(5) NOT NULL,
	PAYMENT_AMOUNT NUMBER(6, 2) NOT NULL,
	PTYPE NUMBER(2) NOT NULL
);

CREATE TABLE PAYMENT_TYPE (
	PTYPE NUMBER(2) NOT NULL,
	PAYMENT_DESCRIPTION VARCHAR2(25) NOT NULL
);

ALTER TABLE VISIT_PAYMENT ADD CONSTRAINT VISIT_PAYMENT_PK PRIMARY KEY ( PAYMENT_ID );

ALTER TABLE PAYMENT_TYPE ADD CONSTRAINT PAYMENT_TYPE_PK PRIMARY KEY ( PTYPE );

ALTER TABLE VISIT_PAYMENT ADD CONSTRAINT VISIT_PAYMENT_VISIT_FK FOREIGN KEY ( VISIT_ID ) REFERENCES VISIT ( VISIT_ID );

ALTER TABLE VISIT_PAYMENT ADD CONSTRAINT VISIT_PAYMENT_PTYPE_FK FOREIGN KEY ( PTYPE ) REFERENCES PAYMENT_TYPE ( PTYPE );

COMMENT ON COLUMN VISIT_PAYMENT.PAYMENT_ID IS
    'payment identifier';
COMMENT ON COLUMN VISIT_PAYMENT.VISIT_ID IS
    'visit identifier';
COMMENT ON COLUMN VISIT_PAYMENT.PAYMENT_AMOUNT IS
    'amount paid for the visit in this installment';
COMMENT ON COLUMN VISIT_PAYMENT.PTYPE IS
    'type of payment used';
COMMENT ON COLUMN PAYMENT_TYPE.PTYPE IS
    'payment type identifier';
COMMENT ON COLUMN PAYMENT_TYPE.PAYMENT_DESCRIPTION IS
    'description for the type of payment';

--add payment types
INSERT INTO PAYMENT_TYPE (
	PTYPE,
	PAYMENT_DESCRIPTION
) VALUES (
	PAYMENT_TYPE_PK_SEQ.NEXTVAL,
	'Historical'
);

INSERT INTO PAYMENT_TYPE (
	PTYPE,
	PAYMENT_DESCRIPTION
) VALUES (
	PAYMENT_TYPE_PK_SEQ.NEXTVAL,
	'Card'
);

INSERT INTO PAYMENT_TYPE (
	PTYPE,
	PAYMENT_DESCRIPTION
) VALUES (
	PAYMENT_TYPE_PK_SEQ.NEXTVAL,
	'Cash'
);

--add all current visits to payment
INSERT INTO VISIT_PAYMENT (
	PAYMENT_ID,
	VISIT_ID,
	PAYMENT_AMOUNT,
	PTYPE
)
	SELECT
		PAYMENT_TYPE_PK_SEQ.NEXTVAL,
		V.VISIT_ID,
		V.VISIT_TOTAL_COST,
		PT.PTYPE
	FROM
		VISIT        V,
		PAYMENT_TYPE PT
	WHERE
		UPPER(PT.PAYMENT_DESCRIPTION) = UPPER('Historical');
